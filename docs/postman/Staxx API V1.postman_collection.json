{
	"info": {
		"_postman_id": "41159943-922c-4d51-b8c7-2cd2ee74236d",
		"name": "Staxx API V1",
		"description": "Staxx API V1\n\n## Response format\n\n```json\n{\n    \"data\": [],\n    \"errors\": [],\n    \"message\": \"\",\n    \"status\": 0\n}\n```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Docker containers",
			"item": [
				{
					"name": "Start container",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"environment_id\": \"{{environment_id}}\",\n\t\"stack_name\": \"{{stack_name}}\",\n\t\"image\": \"postgres\",\n\t\"ports\": [5432],\n\t\"dev_mode\": true,\n\t\"env\": {\n\t\t\"POSTGRES_PASSWORD\": \"postgres\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/containers/start",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"containers",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop container",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/containers/{{container_id}}/stop",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"containers",
								"{{container_id}}",
								"stop"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instances",
			"item": [
				{
					"name": "Get all instances",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances"
							]
						},
						"description": "Get list of available instances."
					},
					"response": [
						{
							"name": "Get all instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{STAXX_URL}}/api/v1/environments",
									"host": [
										"{{STAXX_URL}}"
									],
									"path": [
										"api",
										"v1",
										"environments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get instance details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/{{instance_id}}",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"{{instance_id}}"
							]
						},
						"description": "Get instance details by given ID"
					},
					"response": [
						{
							"name": "Get instance details for instance '410363210222112275'",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{STAXX_URL}}/api/v1/instances/{{instance_id}}",
									"host": [
										"{{STAXX_URL}}"
									],
									"path": [
										"api",
										"v1",
										"instances",
										"{{instance_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "content-length",
									"value": "842"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Mon, 26 Oct 2020 14:11:38 GMT"
								},
								{
									"key": "server",
									"value": "Cowboy"
								},
								{
									"key": "x-request-id",
									"value": "FkGQNPDJoGBhY9UAAB4E"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"testchain\": {\n            \"id\": \"410363210222112275\",\n            \"title\": \"410363210222112275\",\n            \"node_type\": \"geth\",\n            \"status\": \"ready\",\n            \"config\": {\n                \"accounts\": 1,\n                \"block_mine_time\": 0,\n                \"clean_on_stop\": true,\n                \"db_path\": \"/tmp/chains/410363210222112275\",\n                \"deploy_ref\": \"refs/tags/staxx-testrunner\",\n                \"deploy_step_id\": 0,\n                \"description\": \"\",\n                \"gas_limit\": 9000000000000,\n                \"id\": \"410363210222112275\",\n                \"network_id\": 999,\n                \"snapshot_id\": null,\n                \"type\": \"geth\"\n            },\n            \"details\": {\n                \"accounts\": [\n                    {\n                        \"address\": \"0xce8d2a529ba998eb661690226eb1097c6f94c4ab\",\n                        \"balance\": 1e+23,\n                        \"priv_key\": \"a0d1d1ebf2283c23f4adf71e891a4d991300f684a16147cadea4ded3b4386dd6\"\n                    }\n                ],\n                \"coinbase\": \"0xce8d2a529ba998eb661690226eb1097c6f94c4ab\",\n                \"gas_limit\": 9000000000000,\n                \"id\": \"410363210222112275\",\n                \"network_id\": 999,\n                \"rpc_url\": \"http://localhost:53549\",\n                \"ws_url\": \"ws://localhost:59526\"\n            },\n            \"deployment\": {}\n        }\n    },\n    \"errors\": [],\n    \"message\": \"\",\n    \"status\": 0\n}"
						}
					]
				},
				{
					"name": "List stack configs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/stacks/list_config",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"stacks",
								"list_config"
							]
						},
						"description": "List all available stacks configurations."
					},
					"response": []
				},
				{
					"name": "Reload all stacks configs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/stacks/reload_config",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"stacks",
								"reload_config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop instance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/{{instance_id}}/stop",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"{{instance_id}}",
								"stop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start new Instance With Deployment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1f15ba4-049d-4039-a9d0-fde5d9f3f08a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"New Stack started without errors and generated ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(0);",
									"    pm.expect(jsonData.errors).to.eql([]);",
									"    pm.expect(jsonData).to.have.own.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.own.property(\"id\");",
									"    pm.expect(jsonData.data.id).to.not.be.empty;",
									"    ",
									"    pm.environment.set(\"instance_id\", jsonData.data.id); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-User-Email",
								"type": "text",
								"value": "konstantin@makerdao.com"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"testchain\": {\n\t\t\"config\": {\n\t\t\t\"type\": \"{{evm}}\",\n\t\t\t\"accounts\": 2,\n\t\t\t\"block_mine_time\": 0,\n\t\t\t\"clean_on_stop\": false,\n\t\t\t\"snapshot_id\": null, \n\t\t\t\"deploy_ref\": \"refs/tags/staxx-testrunner\",\n\t\t\t\"deploy_step_id\": 1\n\t\t},\n\t\t\"deps\": []\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/start",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start new Empty Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2b483c9-0db6-4da1-a54d-f81e5c2eb4f2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"New Stack started without errors and generated ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(0);",
									"    pm.expect(jsonData.errors).to.eql([]);",
									"    pm.expect(jsonData).to.have.own.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.own.property(\"id\");",
									"    pm.expect(jsonData.data.id).to.not.be.empty;",
									"",
									"    pm.environment.set(\"instance_id\", jsonData.data.id); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-User-Email",
								"value": "konstantin@makerdao.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"testchain\": {\n        \"config\": {\n            \"type\": \"{{evm}}\",\n            \"accounts\": 1,\n            \"block_mine_time\": 0,\n            \"clean_on_stop\": false,\n            \"snapshot_id\": null,\n            \"deploy_ref\": \"refs/tags/staxx-testrunner\",\n            \"deploy_step_id\": 0\n        },\n        \"deps\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/start",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"start"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start new Empty Instance From Snapshot",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c0453d0-e40f-470d-8896-315fa1a82b3e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"New Stack started without errors and generated ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(0);",
									"    pm.expect(jsonData.errors).to.eql([]);",
									"    pm.expect(jsonData).to.have.own.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.own.property(\"id\");",
									"    pm.expect(jsonData.data.id).to.not.be.empty;",
									"    ",
									"    pm.environment.set(\"instance_id\", jsonData.data.id); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-User-Email",
								"value": "konstantin@makerdao.com",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"testchain\": {\n        \"config\": {\n            \"type\": \"{{evm}}\",\n            \"accounts\": 1,\n            \"block_mine_time\": 0,\n            \"clean_on_stop\": true,\n            \"snapshot_id\": \"{{snapshot_id}}\",\n            \"deploy_tag\": \"tags/staxx-deployment\",\n            \"step_id\": 0\n        },\n        \"deps\": []\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/start",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start existing Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3e4f914-b6ad-4f95-9abf-d0f3de31daf8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"testchain\": {\n\t\t\"config\": {\n\t\t\t\"id\": \"{{instance_id}}\"\n\t\t},\n\t\t\"deps\": []\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/start",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete stopped instance",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/{{instance_id}}",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"{{instance_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take Snapshot from running Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43bb5f0b-d92c-4709-8738-e3097bc91897",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/{{instance_id}}/take_snapshot",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"{{instance_id}}",
								"take_snapshot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revert Snapshot on running Instance",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/instances/{{instance_id}}/revert_snapshot/{{snapshot_id}}",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"instances",
								"{{instance_id}}",
								"revert_snapshot",
								"{{snapshot_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Snapshots",
			"item": [
				{
					"name": "List snapshots",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/snapshots/{{evm}}",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"snapshots",
								"{{evm}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete snapshot",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/snapshots/{{snapshot_id}}",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"snapshots",
								"{{snapshot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download snapshot",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{STAXX_URL}}/api/v1/snapshots/{{snapshot_id}}/download",
							"host": [
								"{{STAXX_URL}}"
							],
							"path": [
								"api",
								"v1",
								"snapshots",
								"{{snapshot_id}}",
								"download"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Index",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/javascript",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{STAXX_URL}}/",
					"host": [
						"{{STAXX_URL}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{STAXX_URL}}/version",
					"host": [
						"{{STAXX_URL}}"
					],
					"path": [
						"version"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ccd2a860-8b9d-4496-8f12-165b09761129",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ecb19f27-5fea-4b5b-90ba-c852126e11ab",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}